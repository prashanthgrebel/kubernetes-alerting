apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  namespace: monitoring
  name: workloads-alerts-rule
  labels:
    release: prometheus-stack
spec:
  groups:
    - name: kubernetes-monitoring-alerts
      rules:
        - alert: PodCrashLooping
          expr: rate(kube_pod_container_status_restarts_total[5m]) > 0.3
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: "Pod crash looping: {{ $labels.pod }} in {{ $labels.namespace }} on cluster {{ $externalLabels.cluster }}"
            description: "Pod {{ $labels.pod }} is restarting frequently."

        - alert: PodPendingTooLong
          expr: kube_pod_status_phase{phase="Pending"} > 0
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "Pod stuck in Pending: {{ $labels.pod }} on cluster {{ $externalLabels.cluster }}"
            description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is Pending for over 5 minutes."

        - alert: ContainerOOMKilled
          expr: kube_pod_container_status_last_terminated_reason{reason="OOMKilled"} == 1
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "OOM killed: {{ $labels.container }} in {{ $labels.pod }} on cluster {{ $externalLabels.cluster }}"
            description: "Container {{ $labels.container }} in pod {{ $labels.pod }} was OOMKilled."

        - alert: DeploymentReplicasUnavailable
          expr: kube_deployment_status_replicas_unavailable > 0
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "Deployment unavailable: {{ $labels.deployment }} on cluster {{ $externalLabels.cluster }}"
            description: "Deployment {{ $labels.deployment }} in namespace {{ $labels.namespace }} has unavailable replicas."

        - alert: StatefulSetReplicasMismatch
          expr: kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: "StatefulSet replica mismatch: {{ $labels.statefulset }} on cluster {{ $externalLabels.cluster }}"
            description: "StatefulSet {{ $labels.statefulset }} in namespace {{ $labels.namespace }} does not have all replicas ready."

        #  StatefulSet Pods Not Ready
        - alert: StatefulSetPodsNotReady
          expr: (kube_statefulset_status_replicas_ready < kube_statefulset_spec_replicas)
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "StatefulSet not fully ready: {{ $labels.statefulset }} on cluster {{ $externalLabels.cluster }}"
            description: "StatefulSet {{ $labels.statefulset }} in namespace {{ $labels.namespace }} has pods not in ready state."

        - alert: DaemonSetPodsMisscheduled
          expr: kube_daemonset_status_number_misscheduled > 0
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "Misscheduled DaemonSet pods: {{ $labels.daemonset }} on cluster {{ $externalLabels.cluster }}"
            description: "DaemonSet {{ $labels.daemonset }} in namespace {{ $labels.namespace }} has misscheduled pods."

        # DaemonSet Not All Pods Ready
        - alert: DaemonSetNotAllPodsReady
          expr: kube_daemonset_status_number_ready < kube_daemonset_status_desired_number_scheduled
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: "DaemonSet not ready: {{ $labels.daemonset }} on cluster {{ $externalLabels.cluster }}"
            description: "Not all DaemonSet pods are ready for {{ $labels.daemonset }} in namespace {{ $labels.namespace }}."

        - alert: PodNotReady
          expr: |
            sum(kube_pod_status_ready{condition="false"}) by (namespace, pod) > 0
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "Pod not ready: {{ $labels.pod }} in {{ $labels.namespace }} on cluster {{ $externalLabels.cluster }}"
            description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is in not ready state for more than 2 minutes."

        # ImagePullBackOff
        - alert: PodImagePullBackOff
          expr: |
            kube_pod_container_status_waiting_reason{reason="ImagePullBackOff"} > 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "ImagePullBackOff: {{ $labels.pod }} in {{ $labels.namespace }} on cluster {{ $externalLabels.cluster }}"
            description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has container(s) in ImagePullBackOff state."

        # ErrImagePull
        - alert: PodErrImagePull
          expr: |
            kube_pod_container_status_waiting_reason{reason="ErrImagePull"} > 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "ErrImagePull: {{ $labels.pod }} in {{ $labels.namespace }} on cluster {{ $externalLabels.cluster }}"
            description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has container(s) failing to pull image (ErrImagePull)."
        
        - alert: HighPodCPUUsage
          expr: |
            sum(rate(container_cpu_usage_seconds_total{image!="", container!=""}[5m])) by (namespace, pod)
            /
            sum(kube_pod_container_resource_limits_cpu_cores{container!=""}) by (namespace, pod)
            > 0.9
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "High CPU usage: {{ $labels.pod }} in {{ $labels.namespace }}"
            description: "CPU usage of pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is over 90% of its limit."

        #  High Memory Usage by Pod
        - alert: HighPodMemoryUsage
          expr: |
            sum(container_memory_usage_bytes{image!="", container!=""}) by (namespace, pod)
            /
            sum(kube_pod_container_resource_limits_memory_bytes{container!=""}) by (namespace, pod)
            > 0.9
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "High memory usage: {{ $labels.pod }} in {{ $labels.namespace }}"
            description: "Memory usage of pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is over 90% of its limit."
        #  CPU Limit Exceeded
        - alert: PodCPULimitExceeded
          expr: |
            rate(container_cpu_usage_seconds_total{container!=""}[5m])
            >
            kube_pod_container_resource_limits_cpu_cores{container!=""}
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "Pod {{ $labels.pod }} CPU limit exceeded"
            description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is using more CPU than its defined limit."

        #  Memory Limit Exceeded
        - alert: PodMemoryLimitExceeded
          expr: |
            container_memory_usage_bytes{container!=""}
            >
            kube_pod_container_resource_limits_memory_bytes{container!=""}
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "Pod {{ $labels.pod }} memory limit exceeded"
            description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is using more memory than its defined limit."


